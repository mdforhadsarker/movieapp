{"version":3,"sources":["APIKey.js","images/logo.png","components/layout/Spinner.gif","components/layout/Navbar.js","components/layout/Footer.js","actions/searchActions.js","actions/types.js","components/home/SearchForm.js","components/layout/Spinner.js","components/home/MovieCard.js","components/home/MoviesContainer.js","components/home/Landing.js","components/home/Movie.js","reducers/searchReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKey","Navbar","className","to","src","logo","width","height","alt","Footer","href","target","setLoading","type","SearchForm","onChange","e","props","searchMovie","value","onSubmit","preventDefault","fetchMovies","text","id","this","name","placeholder","Component","connect","state","movies","dispatch","payload","axios","get","then","response","data","catch","err","console","log","Spinner","spinner","style","margin","display","MovieCard","movie","Poster","Title","Year","imdbID","MoviesContainer","content","Response","Search","map","index","key","Landing","loading","Movie","fetchMovie","match","params","movieInfo","Genre","Released","Rated","imdbRating","Director","Writer","Actors","Plot","rel","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d5b5f633.chunk.js","sourcesContent":["module.exports = {\r\n  APIKey: '5098c24f'\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.e29de0f8.png\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.3b97bcdd.gif\";","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport logo from '../../images/logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <nav className='navbar navbar-light bg-dark mb-5 '>\r\n        <div className='container'>\r\n          <div className='navbar-header'>\r\n            <div className='navbar-nav ml-auto d-inline-block'>\r\n              <Link to='/'>\r\n                <img\r\n                  src={logo}\r\n                  width='50'\r\n                  height='50'\r\n                  className='nav-item d-inline-block mr-3 mb-1'\r\n                  alt='logo'\r\n                />\r\n              </Link>\r\n            </div>\r\n            <Link className='navbar-brand text-white text-lg brand-text' to='/'>\r\n              HD MOVIE\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\nexport default Navbar;\r\n","/* eslint-disable react/jsx-no-target-blank */\r\nimport React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div>\r\n      <div className='pt-5'>\r\n        <div className='footer fixed-bottom p-3 font-small bg-dark text-light '>\r\n          <div className='footer-copyright text-center '>\r\n            Developed By\r\n            <span className='text-warning font-weight-normal'> Forhad</span>\r\n            ,Using{' '}\r\n            <i className='fab fa-react'>\r\n              {' '}\r\n              React &amp; Redux integrated with external movies data API{' '}\r\n            </i>\r\n            <a href='https://www.omdbapi.com/' target='_blank'>\r\n              {' '}\r\n              OMDB{' '}\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { SEARCH_MOVIE, FETCH_MOVIES, FETCH_MOVIE, LOADING } from './types';\r\nimport axios from 'axios';\r\n\r\nimport { APIKey } from '../APIKey';\r\n\r\nexport const searchMovie = text => dispatch => {\r\n  dispatch({\r\n    type: SEARCH_MOVIE,\r\n    payload: text\r\n  });\r\n};\r\n\r\nexport const fetchMovies = text => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&s=${text}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIES,\r\n        payload: response.data\r\n      })\r\n    )\r\n\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const fetchMovie = id => dispatch => {\r\n  axios\r\n    .get(`https://www.omdbapi.com/?apikey=${APIKey}&i=${id}`)\r\n    .then(response =>\r\n      dispatch({\r\n        type: FETCH_MOVIE,\r\n        payload: response.data\r\n      })\r\n    )\r\n\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const setLoading = () => {\r\n  return {\r\n    type: LOADING\r\n  };\r\n};\r\n","export const SEARCH_MOVIE = 'SEARCH_MOVIE';\r\nexport const FETCH_MOVIES = 'FETCH_MOVIES';\r\nexport const FETCH_MOVIE = 'FETCH_MOVIE';\r\nexport const LOADING = 'LOADING';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n} from '../../actions/searchActions';\r\n\r\nexport class SearchForm extends Component {\r\n  onChange = e => {\r\n    this.props.searchMovie(e.target.value);\r\n  };\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.fetchMovies(this.props.text);\r\n    this.props.setLoading();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='jumbotron jumbotron-fluid mt-5 text-center'>\r\n        <div className='container'>\r\n          <h1 className='display-4 mb-3 font-weight-normal'>\r\n            Search Your Movies and Tv Series\r\n          </h1>\r\n          <form id='searchForm' onSubmit={this.onSubmit}>\r\n            <input\r\n              className='form-control'\r\n              type='text'\r\n              name='searchText'\r\n              placeholder='Search for a movie, TV series..'\r\n              onChange={this.onChange}\r\n            />\r\n            <button\r\n              className='btn btn-secondary btn-rounded btn-bg mt-3'\r\n              type='submit'\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  text: state.movies.text\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  searchMovie,\r\n  fetchMovies,\r\n  setLoading\r\n})(SearchForm);\r\n","import React from 'react';\r\nimport spinner from './Spinner.gif';\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={spinner}\r\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n        alt='Loading...'\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class MovieCard extends Component {\r\n  render() {\r\n    const { movie } = this.props;\r\n    return (\r\n      <div className='col-md-3 mb-5'>\r\n        <div className='card card-body bg-dark text-center h-100'>\r\n          <img className='w-100 mb-2' src={movie.Poster} alt='Movie Cover' />\r\n          <h5 className='text-light card-title'>\r\n            {movie.Title}-{movie.Year}\r\n          </h5>\r\n          <Link className='btn btn-primary ' to={'/movie/' + movie.imdbID}>\r\n            Movie Details\r\n            <i className='fas fa-chevron-right ml-2' />\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieCard;\r\n","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport MovieCard from './MovieCard';\r\n\r\nexport class MoviesContainer extends Component {\r\n  render() {\r\n    const { movies } = this.props;\r\n    let content = '';\r\n\r\n    content =\r\n      movies.Response === 'True'\r\n        ? movies.Search.map((movie, index) => (\r\n            <MovieCard key={index} movie={movie} />\r\n          ))\r\n        : null;\r\n    return <div className='row'>{content}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  movies: state.movies.movies\r\n});\r\n\r\nexport default connect(mapStateToProps)(MoviesContainer);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport SearchForm from './SearchForm';\r\nimport Spinner from '../layout/Spinner';\r\nimport MoviesContainer from './MoviesContainer'\r\n\r\nexport class Landing extends Component {\r\n  render() {\r\n    const { loading } = this.props;\r\n    return (\r\n      <div className='container'>\r\n        <SearchForm />\r\n        {loading ? <Spinner /> : <MoviesContainer />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchMovie, setLoading } from '../../actions/searchActions';\r\nimport Spinner from '../layout/Spinner';\r\n\r\nexport class Movie extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchMovie(this.props.match.params.id);\r\n    this.props.setLoading();\r\n  }\r\n\r\n  render() {\r\n    const { loading, movie } = this.props;\r\n\r\n    let movieInfo = (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <div className='col-md-4 card card-body'>\r\n            <img src={movie.Poster} className='thumbnail' alt='Poster' />\r\n          </div>\r\n          <div className='col-md-8'>\r\n            <h2 className='mb-4'>{movie.Title}</h2>\r\n            <ul className='list-group'>\r\n              <li className='list-group-item'>\r\n                <strong>Genre:</strong> {movie.Genre}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>Released:</strong> {movie.Released}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>Rated:</strong> {movie.Rated}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>IMDB Rating:</strong> {movie.imdbRating}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>Director:</strong> {movie.Director}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>Writer:</strong> {movie.Writer}\r\n              </li>\r\n              <li className='list-group-item'>\r\n                <strong>Actors:</strong> {movie.Actors}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='card card-body bg-dark my-5 text-light'>\r\n            <div className='col-md-12'>\r\n              <h3 className=''>About</h3>\r\n              {movie.Plot}\r\n              <hr />\r\n              <a\r\n                href={'https://www.imdb.com/title/' + movie.imdbID}\r\n                target='_blank'\r\n                rel='noopener noreferrer'\r\n                className='btn btn-primary'\r\n              >\r\n                View on IMDB\r\n              </a>\r\n              <Link to='/' className='btn btn-default text-light'>\r\n                Go Back To Search\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    let content = loading ? <Spinner /> : movieInfo;\r\n\r\n    return <div>{content}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = state => ({\r\n  loading: state.movies.loading,\r\n  movie: state.movies.movie\r\n});\r\nexport default connect(mapStateToProps, { fetchMovie, setLoading })(Movie);\r\n","import {\r\n  SEARCH_MOVIE,\r\n  FETCH_MOVIES,\r\n  FETCH_MOVIE,\r\n  LOADING\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  text: '',\r\n  movies: [],\r\n  loading: false,\r\n  movie: []\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SEARCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        text: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIES:\r\n      return {\r\n        ...state,\r\n        movies: action.payload,\r\n        loading: false\r\n      };\r\n    case FETCH_MOVIE:\r\n      return {\r\n        ...state,\r\n        movie: action.payload,\r\n        loading: false\r\n      };\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport searchReducer from './searchReducer';\r\n\r\nexport default combineReducers({\r\n  movies: searchReducer\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\r\nimport rootReducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/layout/Navbar';\nimport Footer from './components/layout/Footer';\nimport Landing from './components/home/Landing';\nimport Movie from './components/home/Movie';\n\nimport store from './store';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          <Navbar />\n\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/movie/:id' component={Movie} />\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}